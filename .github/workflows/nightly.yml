name: Nightly Artifacts

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  nightly:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy pandas scipy matplotlib pybind11

      - name: Configure (Release)
        run: cmake -S . -B build-nightly -DCMAKE_BUILD_TYPE=Release -DQUANT_ENABLE_OPENMP=ON

      - name: Build
        run: cmake --build build-nightly --config Release --parallel

      - name: CTest FAST smoke
        run: ctest --test-dir build-nightly --output-on-failure -C Release -L FAST

      - name: QMC vs PRNG (full)
        run: python scripts/qmc_vs_prng.py

      - name: American consistency (full)
        run: python scripts/american_consistency.py

      - name: Heston series calibration
        run: |
          python scripts/calibrate_heston_series.py \
            --inputs data/normalized/spy_20230601.csv data/samples/spx_20240614_sample.csv \
            --metric price --retries 8 --max-evals 1200 --feller-warn --weight vega

      - name: Greeks reliability sweep
        run: python scripts/greeks_reliability.py --paths 2000 5000 10000 20000

      - name: Summarize manifest
        run: |
          python - <<'PY'
          import os
          from datetime import datetime, timezone
          from pathlib import Path
          import sys
          sys.path.insert(0, "scripts")
          from manifest_utils import load_manifest, save_manifest

          manifest = load_manifest()
          files = sorted(str(p) for p in Path("artifacts").rglob("*") if p.is_file())
          manifest["nightly_summary"] = {
              "github_sha": os.environ.get("GITHUB_SHA"),
              "generated_at_utc": datetime.now(timezone.utc).isoformat(),
              "file_count": len(files),
              "files": files,
          }
          save_manifest(manifest)
          PY

      - name: Upload artifacts bundle
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ github.sha }}
          path: artifacts
